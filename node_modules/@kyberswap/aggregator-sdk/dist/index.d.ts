import { ChainId, Currency, CurrencyAmount } from '@dynamic-amm/sdk';
import { Aggregator } from './aggregator';
import { GetSwapParametersCustomTradeRouteParams, SwapV2Parameters } from './types';
/**
 * Returns the best trade for the exact amount of tokens in to the given token out
 */
export declare function getTradeExactInV2(currencyAmountIn: CurrencyAmount | undefined, currencyOut: Currency | undefined, saveGas: boolean | undefined, chainId: ChainId | undefined): Promise<Aggregator | null>;
export default function getSwapParameters({ chainId, currencyInAddress, currencyInDecimals, amountIn, currencyOutAddress, currencyOutDecimals, tradeConfig, feeConfig, customTradeRoute, }: GetSwapParametersCustomTradeRouteParams): Promise<SwapV2Parameters | undefined>;
export declare function getData({ chainId: _chainId, currencyInAddress, currencyInDecimals, amountIn: _amountIn, currencyOutAddress, currencyOutDecimals, tradeConfig, feeConfig, customTradeRoute, }: GetSwapParametersCustomTradeRouteParams): Promise<{
    swapV2Parameters: SwapV2Parameters | undefined;
    rawExecutorData: unknown;
    isUseSwapSimpleMode: boolean | undefined;
    tradeRoute: any[][] | undefined;
}>;
export * from './config/index';
export * from './types';

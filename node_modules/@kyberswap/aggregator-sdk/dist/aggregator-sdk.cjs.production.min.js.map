{"version":3,"file":"aggregator-sdk.cjs.production.min.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/config/dexes.ts","../src/aggregator.ts","../src/config/index.ts","../src/utils/index.ts","../src/index.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import { ChainId } from '@dynamic-amm/sdk'\n\nexport type DexConfig = {\n  value?: string\n  name: string\n  icon: string\n  chainIds?: ChainId[]\n}\n\ntype DexList = { [key: string]: DexConfig }\n\nexport const dexListConfig: DexList = {\n  dmm: {\n    name: 'KyberSwap',\n    icon: 'https://kyberswap.com/favicon.ico',\n    chainIds: [\n      ChainId.MAINNET,\n      ChainId.MATIC,\n      ChainId.BSCMAINNET,\n      ChainId.AVAXMAINNET,\n      ChainId.FANTOM,\n      ChainId.CRONOS,\n      ChainId.ARBITRUM,\n      ChainId.BTTC,\n      ChainId.AURORA,\n      ChainId.VELAS,\n      ChainId.OASIS,\n    ],\n  },\n  kyberswap: {\n    name: 'KyberSwap',\n    icon: 'https://kyberswap.com/favicon.ico',\n    chainIds: [\n      ChainId.MAINNET,\n      ChainId.MATIC,\n      ChainId.BSCMAINNET,\n      ChainId.AVAXMAINNET,\n      ChainId.FANTOM,\n      ChainId.CRONOS,\n      ChainId.ARBITRUM,\n      ChainId.BTTC,\n      ChainId.AURORA,\n      ChainId.VELAS,\n      ChainId.OASIS,\n    ],\n  },\n  uniswap: {\n    name: 'UniSwap_V2',\n    icon: 'https://www.logowik.com/content/uploads/images/uniswap-uni7403.jpg',\n    chainIds: [ChainId.MAINNET],\n  },\n  uniswapv3: {\n    name: 'UniSwap_V3',\n    icon: 'https://www.logowik.com/content/uploads/images/uniswap-uni7403.jpg',\n    chainIds: [ChainId.MAINNET, ChainId.ARBITRUM, ChainId.MATIC],\n  },\n  sushiswap: {\n    name: 'SushiSwap',\n    icon: 'https://res.cloudinary.com/sushi-cdn/image/fetch/f_auto,c_limit,w_32,q_auto/https://app.sushi.com/images/logo.svg',\n    chainIds: [ChainId.MAINNET, ChainId.MATIC, ChainId.FANTOM, ChainId.ARBITRUM, ChainId.BSCMAINNET],\n  },\n  shibaswap: {\n    name: 'ShibaSwap',\n    icon: 'https://shibaswap.com/images/logo_shiba_swap.png',\n    chainIds: [ChainId.MAINNET],\n  },\n  defiswap: {\n    name: 'DefiSwap',\n    icon: 'https://crypto.com/defi/swap/favicon.c5a5b109.png',\n    chainIds: [ChainId.MAINNET],\n  },\n  quickswap: {\n    name: 'QuickSwap',\n    icon: 'https://quickswap.exchange/logo_circle.png',\n    chainIds: [ChainId.MATIC],\n  },\n  dfyn: {\n    name: 'Dfyn',\n    icon: 'https://dfyn.network/assets/logos/dfyn-favicon.png',\n    chainIds: [ChainId.MATIC],\n  },\n  firebird: {\n    name: 'Firebird',\n    icon: 'https://app.firebird.finance/favicon.png',\n    chainIds: [ChainId.MATIC, ChainId.BSCMAINNET],\n  },\n  oneswap: {\n    name: 'OneSwap',\n    icon: 'https://app.firebird.finance/favicon.png',\n    chainIds: [ChainId.MATIC, ChainId.BSCMAINNET],\n  },\n  wault: {\n    name: 'Wault',\n    icon: 'https://wault.finance/wp-content/uploads/2021/04/cropped-wault-new-favicon-32x32.png',\n    chainIds: [ChainId.MATIC, ChainId.BSCMAINNET],\n  },\n  curve: {\n    name: 'Curve',\n    icon: 'https://curve.fi/favicon-32x32.svg',\n    chainIds: [ChainId.MAINNET, ChainId.MATIC, ChainId.FANTOM, ChainId.ARBITRUM],\n  },\n  jetswap: {\n    name: 'JetSwap',\n    icon: 'https://jetswap.finance/favicon_io/favicon.ico',\n    chainIds: [ChainId.MATIC, ChainId.BSCMAINNET, ChainId.FANTOM],\n  },\n  'iron-stable': {\n    name: 'IronSwap',\n    icon: 'https://iron.finance/icons/icon-72x72.png',\n    chainIds: [ChainId.MATIC, ChainId.AVAXMAINNET],\n  },\n  polydex: {\n    name: 'PolyDex',\n    icon: 'https://www.polydex.fi/favicon.ico',\n    chainIds: [ChainId.MATIC],\n  },\n  polycat: {\n    name: 'Polycat',\n    icon: 'https://polycat.finance/favicon-32x32.png',\n    chainIds: [ChainId.MATIC],\n  },\n  gravity: {\n    name: 'Gravity',\n    icon: 'https://gravityfinance.io/favicon.ico',\n    chainIds: [ChainId.MATIC],\n  },\n  cometh: {\n    name: 'ComethSwap',\n    icon: 'https://swap.cometh.io/favicon.ico',\n    chainIds: [ChainId.MATIC],\n  },\n  dinoswap: {\n    name: 'DinoSwap',\n    icon: 'https://dinoswap.exchange/favicon.ico',\n    chainIds: [ChainId.MATIC],\n  },\n  pancake: {\n    name: 'PancakeSwap',\n    icon: 'https://pancakeswap.finance/favicon.ico',\n    chainIds: [ChainId.BSCMAINNET],\n  },\n  'pancake-legacy': {\n    name: 'PancakeSwap Legacy',\n    icon: 'https://pancakeswap.finance/favicon.ico',\n    chainIds: [ChainId.BSCMAINNET],\n  },\n  mdex: {\n    name: 'Mdex',\n    icon: 'https://cdn.jsdelivr.net/gh/mdexSwap/hswap@main/favicon.png',\n    chainIds: [ChainId.BSCMAINNET],\n  },\n  biswap: {\n    name: 'Biswap',\n    icon: 'https://biswap.org/logo.png',\n    chainIds: [ChainId.BSCMAINNET],\n  },\n  apeswap: {\n    name: 'ApeSwap',\n    icon: 'https://apeswap.finance/favicon.ico',\n    chainIds: [ChainId.MATIC, ChainId.BSCMAINNET],\n  },\n  ellipsis: {\n    name: 'Ellipsis',\n    icon: 'https://ellipsis.finance/ellipsis-light.png',\n    chainIds: [ChainId.BSCMAINNET],\n  },\n  safeswap: {\n    name: 'SafeSwap',\n    icon: 'https://safeswap.yfdai.finance/favicon.png',\n    chainIds: [ChainId.BSCMAINNET],\n  },\n  pantherswap: {\n    name: 'PantherSwap',\n    icon: 'https://pantherswap.com/favicon.ico',\n    chainIds: [ChainId.BSCMAINNET],\n  },\n  nerve: {\n    name: 'Nerve',\n    icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/8755.png',\n    chainIds: [ChainId.BSCMAINNET],\n  },\n  pangolin: {\n    name: 'Pangolin',\n    icon: 'https://pangolin.exchange/icon.svg',\n    chainIds: [ChainId.AVAXMAINNET],\n  },\n  traderjoe: {\n    name: 'TraderJoe',\n    icon: 'https://www.traderjoexyz.com/favicon.png',\n    chainIds: [ChainId.AVAXMAINNET],\n  },\n  spookyswap: {\n    name: 'SpookySwap',\n    icon: 'https://spookyswap.finance/favicon.ico',\n    chainIds: [ChainId.FANTOM],\n  },\n  spiritswap: {\n    name: 'SpiritSwap',\n    icon: 'https://app.spiritswap.finance/favicon-32x32.png',\n    chainIds: [ChainId.FANTOM],\n  },\n  paintswap: {\n    name: 'PaintSwap',\n    icon: 'https://paintswap.finance/favicon.png',\n    chainIds: [ChainId.FANTOM],\n  },\n  morpheus: {\n    name: 'MorpheusSwap',\n    icon: 'https://morpheusswap.app/favicon.ico',\n    chainIds: [ChainId.FANTOM],\n  },\n  beethovenx: {\n    name: 'beethoven-x',\n    icon: 'https://app.beets.fi/favicon.ico',\n    chainIds: [ChainId.FANTOM],\n  },\n  synapse: {\n    name: 'Synapse',\n    icon: 'https://synapseprotocol.com/favicon.ico',\n    chainIds: [\n      ChainId.MAINNET,\n      ChainId.BSCMAINNET,\n      ChainId.MATIC,\n      ChainId.AVAXMAINNET,\n      ChainId.FANTOM,\n      ChainId.ARBITRUM,\n    ],\n  },\n  saddle: {\n    name: 'Saddle',\n    icon: 'https://saddle.finance/favicon-32x32.png',\n    chainIds: [ChainId.MAINNET, ChainId.FANTOM, ChainId.ARBITRUM],\n  },\n  balancer: {\n    name: 'Balancer',\n    icon: 'https://app.balancer.fi/favicon.ico',\n    chainIds: [ChainId.MAINNET, ChainId.MATIC, ChainId.ARBITRUM],\n  },\n  axial: {\n    name: 'Axial',\n    icon: 'https://assets.website-files.com/6189dee5e79d6e8f7e214eba/618bf2f3e40e777d4210a84f_favicon.ico',\n    chainIds: [ChainId.AVAXMAINNET],\n  },\n  lydia: {\n    name: 'Lydia',\n    icon: 'https://www.lydia.finance/favicon.ico',\n    chainIds: [ChainId.AVAXMAINNET],\n  },\n  yetiswap: {\n    name: 'Yeti Swap',\n    icon: 'https://exchange.yetiswap.app/favicon.png',\n    chainIds: [ChainId.AVAXMAINNET],\n  },\n  hurricane: {\n    name: 'HurricaneSwap',\n    icon: 'https://hurricaneswap.com/favicon.png',\n    chainIds: [ChainId.AVAXMAINNET],\n  },\n  vvs: {\n    name: 'VVS Finance',\n    icon: 'https://vvs.finance/favicon.ico',\n    chainIds: [ChainId.CRONOS],\n  },\n  cronaswap: {\n    name: 'CronaSwap',\n    icon: 'https://app.cronaswap.org/favicon.png',\n    chainIds: [ChainId.CRONOS],\n  },\n  crodex: {\n    name: 'Crodex',\n    icon: 'https://swap.crodex.app/favicon.png',\n    chainIds: [ChainId.CRONOS],\n  },\n  mmf: {\n    name: 'Mad Meerkat Finance',\n    icon: 'https://mm.finance/favicon.ico',\n    chainIds: [ChainId.CRONOS],\n  },\n  kryptodex: {\n    name: 'KryptoDEX',\n    icon: 'https://www.kryptodex.org/favicon.svg',\n    chainIds: [ChainId.CRONOS],\n  },\n  empiredex: {\n    name: 'Empire Dex',\n    icon: 'https://bsc.empiredex.org/favicon.png',\n    chainIds: [ChainId.CRONOS],\n  },\n  photonswap: {\n    name: 'PhotonSwap',\n    icon: 'https://photonswap.finance/logo.png',\n    chainIds: [ChainId.CRONOS],\n  },\n  trisolaris: {\n    name: 'Trisolaris',\n    icon: 'https://www.trisolaris.io/favicon.png',\n    chainIds: [ChainId.AURORA],\n  },\n  wannaswap: {\n    name: 'WannaSwap',\n    icon: 'https://wannaswap.finance/icon.png',\n    chainIds: [ChainId.AURORA],\n  },\n  nearpad: {\n    name: 'NearPAD',\n    icon: 'https://i.imgur.com/6IFKjOZ.png',\n    chainIds: [ChainId.AURORA],\n  },\n  swapr: {\n    name: 'Swapr',\n    icon: 'https://swapr.eth.link/favicon.png',\n    chainIds: [ChainId.ARBITRUM],\n  },\n  wagyuswap: {\n    name: 'WagyuSwap',\n    icon: 'https://exchange.wagyuswap.app/images/logo.png',\n    chainIds: [ChainId.VELAS],\n  },\n  astroswap: {\n    name: 'AstroSwap',\n    icon: 'https://exchange.astroswap.app/images/logo.png',\n    chainIds: [ChainId.VELAS],\n  },\n  yuzuswap: {\n    name: 'YuzuSwap',\n    icon: 'https://yuzu-swap.com/yuzu-white.2d6bbbe6.svg',\n    chainIds: [ChainId.OASIS],\n  },\n  // duneswap: {\n  //   name: 'Duneswap',\n  //   icon: 'https://www.duneswap.com/_next/image?url=%2Flogo.png&w=256&q=75',\n  //   chainIds: [ChainId.OASIS],\n  // },\n  lizard: {\n    name: 'Lizard Exchange',\n    icon: 'https://lizard.exchange/static/media/lizard_white.17de6ee5.svg',\n    chainIds: [ChainId.OASIS],\n  },\n  valleyswap: {\n    name: 'ValleySwap_V1',\n    icon: 'https://valleyswap.com/images/logo_valley-swap_mob.svg',\n    chainIds: [ChainId.OASIS],\n  },\n  'valleyswap-v2': {\n    name: 'ValleySwap_V2',\n    icon: 'https://valleyswap.com/images/logo_valley-swap_mob.svg',\n    chainIds: [ChainId.OASIS],\n  },\n  gemkeeper: {\n    name: 'GemKeeper',\n    icon: 'https://gemkeeper.finance/static/media/main_logo.0ec96048.png',\n    chainIds: [ChainId.OASIS],\n  },\n  // sahara: {\n  //   name: 'Sahara',\n  //   icon: 'https://sahara.exchange/static/media/sahara-logo-white.b130dd89.png',\n  //   chainIds: [ChainId.OASIS],\n  // },\n}\n\ntype DexTypes = {\n  [chainId in ChainId | 'all']?: {\n    [dex: string]: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9\n  }\n}\n/*\n// dex id - swap fee\n1 - 30 (default) = 0.3%\n2 - 25\n3 - 20\n4 - 15\n5 - 10\n6 - 5\n7 - 17 = 0.17%\n8 - 18 = 0.18%\n9 - 50 = 0.5%\n*/\nexport const dexIds: DexTypes = {\n  all: {\n    firebird: 1,\n    pancake: 2,\n    'pancake-legacy': 2,\n    apeswap: 3,\n    wault: 3,\n    biswap: 5,\n    polydex: 5,\n    jetswap: 5,\n    polycat: 2,\n    spookyswap: 3,\n    axial: 3,\n    cronaswap: 2,\n    gravity: 2,\n    kyberswap: 0,\n    mmf: 7,\n    kryptodex: 3,\n    cometh: 9,\n    dinoswap: 8,\n    safeswap: 2,\n    pantherswap: 3,\n    morpheus: 4,\n    wannaswap: 3,\n    swapr: 2,\n    wagyuswap: 3,\n    astroswap: 3,\n  },\n  [ChainId.BSCMAINNET]: {\n    jetswap: 1,\n  },\n  [ChainId.MATIC]: {},\n}\n\n// For encoding\nexport const dexTypes: DexTypes = {\n  all: {\n    curve: 2,\n    dmm: 3,\n    kyberswap: 3,\n    oneswap: 1,\n    ellipsis: 2,\n    nerve: 1,\n    'iron-stable': 4,\n    balancer: 6,\n    synapse: 4,\n    saddle: 4,\n    axial: 4,\n    beethovenx: 6,\n    uniswapv3: 5,\n  },\n  [ChainId.MAINNET]: {},\n  [ChainId.BSCMAINNET]: {},\n  [ChainId.MATIC]: {},\n  [ChainId.AVAXMAINNET]: {},\n  [ChainId.FANTOM]: {},\n  [ChainId.VELAS]: {},\n  [ChainId.OASIS]: {},\n}\n\nfunction findDex<K extends keyof typeof dexListConfig>(exchange: K): DexConfig | undefined {\n  const dex = dexListConfig[exchange]\n  return dex ? { ...dex, value: exchange } : undefined\n}\n\nexport const DEX_TO_COMPARE: { [chainId in ChainId]?: DexConfig } = {\n  [ChainId.BSCMAINNET]: findDex('pancake'),\n  [ChainId.MATIC]: findDex('quickswap'),\n  [ChainId.AVAXMAINNET]: findDex('traderjoe'),\n  // TODO: check if we need change this to uniswapv3\n  [ChainId.MAINNET]: findDex('uniswapv2'),\n  [ChainId.FANTOM]: findDex('spookyswap'),\n  [ChainId.CRONOS]: findDex('vvs'),\n  [ChainId.AURORA]: findDex('trisolaris'),\n  [ChainId.ARBITRUM]: findDex('sushiswap'),\n  [ChainId.VELAS]: findDex('wagyuswap'),\n  [ChainId.OASIS]: findDex('valleyswap-v2'),\n}\n","import { BigNumber, ethers } from 'ethers'\nimport {\n  ChainId,\n  Currency,\n  CurrencyAmount,\n  ETHER,\n  Fraction,\n  JSBI,\n  Percent,\n  Price,\n  Token,\n  TokenAmount,\n  TradeType,\n  WETH,\n  ONE,\n  ZERO,\n} from '@dynamic-amm/sdk'\nimport { dexIds, dexTypes, dexListConfig, DexConfig, DEX_TO_COMPARE } from './config/dexes'\nimport invariant from 'tiny-invariant'\nimport axios from 'axios'\n\ninterface AggregationComparer {\n  inputAmount: CurrencyAmount\n  outputAmount: CurrencyAmount\n  amountInUsd: string\n  amountOutUsd: string\n  receivedUsd: string\n  // outputPriceUSD: number\n  comparedDex: DexConfig\n  tradeSaved?: {\n    percent?: number\n    usd?: string\n  }\n}\n\ntype GasPrice = { fast: string; standard: string; low: string; default: string }\n\nfunction dec2bin(dec: number, length: number): string {\n  // let bin = (dec >>> 0).toString(2)\n  let bin = dec.toString(2)\n  // const maxBinLength = maxDec ? (maxDec >>> 0).toString(2).length : null\n  const maxBinLength = length || null\n  if (maxBinLength && maxBinLength > bin.length) {\n    const zeros = new Array(maxBinLength - bin.length + 1).join('0')\n    bin = zeros + bin\n  }\n  return bin\n}\n\nfunction bin2dec(binaryNumber: string): number {\n  return parseInt((binaryNumber + '').replace(/[^01]/gi, ''), 2)\n}\n\ntype ExchangeConfig = { id: number; type: number } & DexConfig\n\nexport const getExchangeConfig = (exchange: string, chainId: ChainId): ExchangeConfig => {\n  if (!exchange) {\n    return {} as ExchangeConfig\n  }\n  const getKeyValue =\n    <T extends object, U extends keyof T>(obj: T) =>\n    (key: U) =>\n      obj[key]\n  const ids = (chainId && dexIds[chainId]) || {}\n  const types = (chainId && dexTypes[chainId]) || {}\n  const allIds = Object.assign({}, dexIds.all || {}, ids)\n  const allTypes = Object.assign({}, dexTypes.all || {}, types)\n  return {\n    ...(getKeyValue(dexListConfig)(exchange) || {}),\n    id: getKeyValue(allIds)(exchange) ?? 1,\n    type: getKeyValue(allTypes)(exchange) ?? 0,\n  }\n}\n\nfunction encodeParameters(types: any[], values: any[]): string {\n  const abi = new ethers.utils.AbiCoder()\n  return abi.encode(types, values)\n}\n\nfunction encodeUniSwapV3(data: any) {\n  return encodeParameters(\n    ['address', 'address', 'address', 'uint256', 'uint256', 'uint160'],\n    [data.pool, data.tokenIn, data.tokenOut, data.swapAmount, data.limitReturnAmount || '0', '0']\n  )\n}\n\nfunction encodeUniSwap(data: any) {\n  return encodeParameters(\n    ['address', 'address', 'address', 'address', 'uint256', 'uint256'],\n    [data.pool, data.tokenIn, data.tokenOut, data.recipient, data.collectAmount, data.limitReturnAmount || '0']\n  )\n}\n\nfunction encodeStableSwap(data: any) {\n  return encodeParameters(\n    ['address', 'address', 'address', 'int128', 'int128', 'uint256', 'uint256', 'uint256', 'address'],\n    [\n      data.pool,\n      data.tokenIn,\n      data.tokenOut,\n      data.extra?.tokenInIndex,\n      data.extra?.tokenOutIndex,\n      data.swapAmount,\n      data.limitReturnAmount || '0',\n      data.poolLength,\n      data.pool,\n    ]\n  )\n}\n\nfunction encodeCurveSwap(data: any) {\n  const poolType = data.poolType?.toLowerCase()\n  // curve-base: exchange\n  // curve-meta: exchange_underlying\n  const usePoolUnderlying = data.extra?.underlying\n  const isTriCrypto = poolType === 'curve-tricrypto'\n\n  return encodeParameters(\n    ['address', 'address', 'address', 'int128', 'int128', 'uint256', 'uint256', 'bool', 'bool'],\n    [\n      data.pool,\n      data.tokenIn,\n      data.tokenOut,\n      data.extra?.tokenInIndex,\n      data.extra?.tokenOutIndex,\n      data.swapAmount,\n      '0',\n      usePoolUnderlying,\n      isTriCrypto,\n    ]\n  )\n}\n\nfunction encodeBalancerSwap(data: any) {\n  return encodeParameters(\n    ['address', 'bytes32', 'address', 'address', 'uint256', 'uint256'],\n    [data.extra?.vault, data.pool, data.tokenIn, data.tokenOut, data.swapAmount, data.limitReturnAmount || '0']\n  )\n}\n\nexport function isEncodeUniswapCallback(chainId: ChainId): (swap: any) => boolean {\n  return (swap) => {\n    const dex = getExchangeConfig(swap.exchange, chainId)\n    if ([1, 4, 2, 6, 5].includes(dex.type)) {\n      return false\n    }\n    return true\n  }\n}\n\nexport function encodeSwapExecutor(swaps: any[][], chainId: ChainId) {\n  return swaps.map((swap) => {\n    return swap.map((sequence) => {\n      // (0 uni, 1 one swap, 2 curve)\n      const dex = getExchangeConfig(sequence.exchange, chainId)\n      // dexOption: 16 bit (first 8 bit for dextype + last 8 bit is dexIds in uni swap type)\n      const dexOption = dec2bin(dex.type, 8) + dec2bin(dex.id, 8)\n      let data: string\n      if (dex.type === 1 || dex.type === 4) {\n        data = encodeStableSwap(sequence)\n      } else if (dex.type === 2) {\n        data = encodeCurveSwap(sequence)\n      } else if (dex.type === 6) {\n        data = encodeBalancerSwap(sequence)\n      } else if (dex.type === 5) {\n        data = encodeUniSwapV3(sequence)\n      } else {\n        data = encodeUniSwap(sequence)\n      }\n      return { data, dexOption: bin2dec(dexOption) }\n    })\n  })\n}\n\nexport function encodeFeeConfig({\n  feeReceiver,\n  isInBps,\n  feeAmount,\n}: {\n  feeReceiver: string\n  isInBps: boolean\n  feeAmount: string\n}) {\n  return encodeParameters(['address', 'bool', 'uint256'], [feeReceiver, isInBps, feeAmount])\n}\n\nexport function encodeSimpleModeData(data: {\n  firstPools: string[]\n  firstSwapAmounts: string[]\n  swapSequences: { data: string; dexOption: any }[][]\n  deadline: string\n  destTokenFeeData: string\n}) {\n  const bytesDes = encodeParameters(\n    ['address[]', 'uint256[]', 'bytes[]', 'uint256', 'bytes'],\n    [\n      data.firstPools,\n      data.firstSwapAmounts,\n      data.swapSequences.map((item) => {\n        const data = item.map((inner) => {\n          return [inner.data, inner.dexOption]\n        })\n        return encodeParameters(['(bytes,uint16)[]'], [data])\n      }),\n      data.deadline,\n      data.destTokenFeeData,\n    ]\n  )\n  return '0x0000000000000000000000000000000000000000000000000000000000000020'.concat(bytesDes.toString().slice(2))\n}\n\n/**\n * Given a currency amount and a chain ID, returns the equivalent representation as the token amount.\n * In other words, if the currency is ETHER, returns the WETH token amount for the given chain. Otherwise, returns\n * the input currency amount.\n */\nfunction wrappedAmount2(currencyAmount: CurrencyAmount, chainId: ChainId): TokenAmount {\n  if (currencyAmount instanceof TokenAmount) return currencyAmount\n  if (currencyAmount.currency === ETHER) return new TokenAmount(WETH[chainId], currencyAmount.raw)\n  invariant(false, 'CURRENCY')\n}\n\nfunction wrappedCurrency2(currency: Currency, chainId: ChainId): Token {\n  if (currency instanceof Token) return currency\n  if (currency === ETHER) return WETH[chainId]\n  invariant(false, 'CURRENCY')\n}\n\n/**\n */\nexport class Aggregator {\n  /**\n   * The type of the trade, either exact in or exact out.\n   */\n  public readonly tradeType: TradeType\n  /**\n   * The input amount for the trade assuming no slippage.\n   */\n  public readonly inputAmount: CurrencyAmount\n  /**\n   * The output amount for the trade assuming no slippage.\n   */\n  public readonly outputAmount: CurrencyAmount\n  /**\n   */\n  public readonly swaps: any[][]\n  /**\n   */\n  public readonly tokens: any\n  /**\n   * The price expressed in terms of output amount/input amount.\n   */\n  public readonly executionPrice: Price\n\n  public readonly amountInUsd: string\n  public readonly amountOutUsd: string\n  public readonly receivedUsd: string\n  public readonly gasUsd: number\n  public readonly priceImpact: number\n\n  public constructor(\n    inputAmount: CurrencyAmount,\n    outputAmount: CurrencyAmount,\n    amountInUsd: string,\n    amountOutUsd: string,\n    receivedUsd: string,\n    swaps: any[][],\n    tokens: any,\n    tradeType: TradeType,\n    gasUsd: number,\n    priceImpact: number\n  ) {\n    this.tradeType = tradeType\n    this.inputAmount = inputAmount\n    this.outputAmount = outputAmount\n    this.amountInUsd = amountInUsd\n    this.amountOutUsd = amountOutUsd\n    this.receivedUsd = receivedUsd\n    this.executionPrice = new Price(\n      this.inputAmount.currency,\n      this.outputAmount.currency,\n      this.inputAmount.raw,\n      this.outputAmount.raw\n    )\n    this.swaps = swaps\n    this.tokens = tokens\n    this.gasUsd = gasUsd\n    this.priceImpact = priceImpact\n  }\n\n  /**\n   * Get the minimum amount that must be received from this trade for the given slippage tolerance\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\n   */\n  public minimumAmountOut(slippageTolerance: Percent): CurrencyAmount {\n    invariant(!slippageTolerance.lessThan(ZERO), 'SLIPPAGE_TOLERANCE')\n    if (this.tradeType === TradeType.EXACT_OUTPUT) {\n      return this.outputAmount\n    } else {\n      const slippageAdjustedAmountOut = new Fraction(ONE)\n        .add(slippageTolerance)\n        .invert()\n        .multiply(this.outputAmount.raw).quotient\n      return this.outputAmount instanceof TokenAmount\n        ? new TokenAmount(this.outputAmount.token, slippageAdjustedAmountOut)\n        : CurrencyAmount.ether(slippageAdjustedAmountOut)\n    }\n  }\n\n  /**\n   * Get the maximum amount in that can be spent via this trade for the given slippage tolerance\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\n   */\n  public maximumAmountIn(slippageTolerance: Percent): CurrencyAmount {\n    invariant(!slippageTolerance.lessThan(ZERO), 'SLIPPAGE_TOLERANCE')\n    if (this.tradeType === TradeType.EXACT_INPUT) {\n      return this.inputAmount\n    } else {\n      const slippageAdjustedAmountIn = new Fraction(ONE).add(slippageTolerance).multiply(this.inputAmount.raw).quotient\n      return this.inputAmount instanceof TokenAmount\n        ? new TokenAmount(this.inputAmount.token, slippageAdjustedAmountIn)\n        : CurrencyAmount.ether(slippageAdjustedAmountIn)\n    }\n  }\n\n  /**\n   * @param baseURL\n   * @param currencyAmountIn exact amount of input currency to spend\n   * @param currencyOut the desired currency out\n   * @param saveGas\n   */\n  public static async bestTradeExactIn(\n    baseURL: string,\n    currencyAmountIn: CurrencyAmount,\n    currencyOut: Currency,\n    saveGas = false,\n    dexes = '',\n    gasPrice?: GasPrice\n  ): Promise<Aggregator | null> {\n    const chainId: ChainId | undefined =\n      currencyAmountIn instanceof TokenAmount\n        ? currencyAmountIn.token.chainId\n        : currencyOut instanceof Token\n        ? currencyOut.chainId\n        : undefined\n\n    invariant(chainId !== undefined, 'CHAIN_ID')\n\n    const amountIn = wrappedAmount2(currencyAmountIn, chainId)\n    const tokenOut = wrappedCurrency2(currencyOut, chainId)\n\n    const tokenInAddress = amountIn.token?.address\n    const tokenOutAddress = tokenOut.address\n    if (tokenInAddress && tokenOutAddress) {\n      const search = new URLSearchParams({\n        tokenIn: tokenInAddress.toLowerCase(),\n        tokenOut: tokenOutAddress.toLowerCase(),\n        amountIn: currencyAmountIn.raw?.toString(),\n        saveGas: saveGas ? '1' : '0',\n        gasInclude: saveGas ? '1' : '0',\n        ...(gasPrice\n          ? {\n              gasPrice: BigNumber.from(gasPrice.standard)\n                .mul(10 ** 9)\n                .toString(),\n            }\n          : {}),\n        ...(dexes ? { dexes } : {}),\n      })\n      try {\n        const response = await axios(`${baseURL}?${search}`)\n        const result = await response.data\n        if (\n          !result?.inputAmount ||\n          !result?.outputAmount ||\n          result.inputAmount === '0' ||\n          result.outputAmount === '0'\n        ) {\n          return null\n        }\n\n        const toCurrencyAmount = function (value: string, currency: Currency): CurrencyAmount {\n          return currency instanceof Token\n            ? new TokenAmount(currency, JSBI.BigInt(value))\n            : CurrencyAmount.ether(JSBI.BigInt(value))\n        }\n\n        const inputAmount = toCurrencyAmount(result.inputAmount, currencyAmountIn.currency)\n        const outputAmount = toCurrencyAmount(result.outputAmount, currencyOut)\n\n        const priceImpact = ((-result.amountOutUsd + result.amountInUsd) * 100) / result.amountInUsd\n\n        return new Aggregator(\n          inputAmount,\n          outputAmount,\n          result.amountInUsd,\n          result.amountOutUsd,\n          result.receivedUsd,\n          result.swaps || [],\n          result.tokens || {},\n          TradeType.EXACT_INPUT,\n          result.gasUsd,\n          priceImpact\n        )\n      } catch (e) {\n        console.error(e)\n      }\n    }\n\n    return null\n  }\n\n  /**\n   * @param baseURL\n   * @param currencyAmountIn exact amount of input currency to spend\n   * @param currencyOut the desired currency out\n   */\n  public static async compareDex(\n    baseURL: string,\n    currencyAmountIn: CurrencyAmount,\n    currencyOut: Currency\n  ): Promise<AggregationComparer | null> {\n    const chainId: ChainId | undefined =\n      currencyAmountIn instanceof TokenAmount\n        ? currencyAmountIn.token.chainId\n        : currencyOut instanceof Token\n        ? currencyOut.chainId\n        : undefined\n    invariant(chainId !== undefined, 'CHAIN_ID')\n\n    const amountIn = wrappedAmount2(currencyAmountIn, chainId)\n    const tokenOut = wrappedCurrency2(currencyOut, chainId)\n\n    const tokenInAddress = amountIn.token?.address?.toLowerCase()\n    const tokenOutAddress = tokenOut.address?.toLowerCase()\n    const comparedDex = DEX_TO_COMPARE[chainId]\n    // const basePriceURL = priceUri[chainId]\n    if (\n      tokenInAddress &&\n      tokenOutAddress &&\n      comparedDex?.value\n      //  && basePriceURL\n    ) {\n      const search = new URLSearchParams({\n        tokenIn: tokenInAddress,\n        tokenOut: tokenOutAddress,\n        amountIn: currencyAmountIn.raw?.toString(),\n        saveGas: '0',\n        gasInclude: '1',\n        dexes: comparedDex.value,\n      })\n      try {\n        // const promises: any[] = [\n        //   fetch(`${baseURL}?${search}`),\n        //   fetch(`${basePriceURL}/api/price/token-price?addresses=${tokenOutAddress}`)\n        // ]\n        // const [resSwap, resPrice] = await Promise.all(promises)\n        // const [swapData, priceData] = await Promise.all([resSwap.json(), resPrice.json()])\n        // if (!swapData?.inputAmount || !swapData?.outputAmount || !priceData?.data) {\n        //   return null\n        // }\n\n        const response = await axios(`${baseURL}?${search}`)\n        const swapData = await response.data\n\n        if (!swapData?.inputAmount || !swapData?.outputAmount) {\n          return null\n        }\n\n        const toCurrencyAmount = function (value: string, currency: Currency): CurrencyAmount {\n          return currency instanceof Token\n            ? new TokenAmount(currency, JSBI.BigInt(value))\n            : CurrencyAmount.ether(JSBI.BigInt(value))\n        }\n\n        const inputAmount = toCurrencyAmount(swapData.inputAmount, currencyAmountIn.currency)\n        const outputAmount = toCurrencyAmount(swapData.outputAmount, currencyOut)\n        const amountInUsd = swapData.amountInUsd\n        const amountOutUsd = swapData.amountOutUsd\n        const receivedUsd = swapData.receivedUsd\n\n        // const outputPriceUSD = priceData.data[tokenOutAddress] || Object.values(priceData.data[0]) || '0'\n\n        return {\n          inputAmount,\n          outputAmount,\n          amountInUsd,\n          amountOutUsd,\n          receivedUsd,\n          // outputPriceUSD: parseFloat(outputPriceUSD),\n          comparedDex,\n        }\n      } catch (e) {\n        console.error(e)\n      }\n    }\n\n    return null\n  }\n}\n","import { ChainId } from '@dynamic-amm/sdk'\nimport { ethers } from 'ethers'\n\nconst REACT_APP_INFURA_KEY=\"9aa3d95b3bc440fa88ea12eaa4456161\"\nconst REACT_APP_AGGREGATOR_API=\"https://aggregator-api.kyberswap.com\"\n\nexport const NETWORK_URLS: {\n  [chainId in ChainId]: string\n} = {\n  [ChainId.MAINNET]: 'https://ethereum.kyber.network/v1/mainnet/geth?appId=prod-dmm-interface',\n  [ChainId.RINKEBY]: `https://rinkeby.infura.io/v3/${REACT_APP_INFURA_KEY}`,\n  [ChainId.ROPSTEN]: 'https://ropsten.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161',\n  [ChainId.GÖRLI]: `https://goerli.infura.io/v3/${REACT_APP_INFURA_KEY}`,\n  [ChainId.KOVAN]: `https://kovan.infura.io/v3/${REACT_APP_INFURA_KEY}`,\n  [ChainId.MUMBAI]: `https://rpc-mumbai.maticvigil.com`,\n  [ChainId.MATIC]: `https://polygon.dmm.exchange/v1/mainnet/geth?appId=prod-dmm`,\n  [ChainId.BSCTESTNET]: `https://data-seed-prebsc-1-s1.binance.org:8545`,\n  [ChainId.BSCMAINNET]: `https://bsc.dmm.exchange/v1/mainnet/geth?appId=prod-dmm-interface`,\n  [ChainId.AVAXTESTNET]: `https://api.avax-test.network/ext/bc/C/rpc`,\n  [ChainId.AVAXMAINNET]: `https://avalanche.dmm.exchange/v1/mainnet/geth?appId=prod-dmm`,\n  [ChainId.FANTOM]: `https://rpc.ftm.tools`,\n  [ChainId.CRONOSTESTNET]: `https://cronos-testnet-3.crypto.org:8545`,\n  [ChainId.CRONOS]: `https://evm-cronos.crypto.org`,\n  // [ChainId.BTTC]: `https://rpc.bt.io`,\n  [ChainId.BTTC]: `https://bttc.dev.kyberengineering.io`,\n  [ChainId.ARBITRUM]: `https://arb1.arbitrum.io/rpc`,\n  [ChainId.ARBITRUM_TESTNET]: `https://rinkeby.arbitrum.io/rpc`,\n  [ChainId.VELAS]: 'https://evmexplorer.velas.com/rpc',\n  [ChainId.AURORA]: `https://mainnet.aurora.dev/GvfzNcGULXzWqaVahC8WPTdqEuSmwNCu3Nu3rtcVv9MD`,\n  [ChainId.OASIS]: `https://emerald.oasis.dev`,\n}\n\nexport const providers: {\n  [chainId in ChainId]?: any\n} = {\n  [ChainId.MAINNET]: new ethers.providers.JsonRpcProvider(NETWORK_URLS[ChainId.MAINNET]),\n  [ChainId.BSCMAINNET]: new ethers.providers.JsonRpcProvider(NETWORK_URLS[ChainId.BSCMAINNET]),\n  [ChainId.AVAXMAINNET]: new ethers.providers.JsonRpcProvider(NETWORK_URLS[ChainId.AVAXMAINNET]),\n  [ChainId.MATIC]: new ethers.providers.JsonRpcProvider(NETWORK_URLS[ChainId.MATIC]),\n  [ChainId.FANTOM]: new ethers.providers.JsonRpcProvider(NETWORK_URLS[ChainId.FANTOM]),\n  [ChainId.CRONOS]: new ethers.providers.JsonRpcProvider(NETWORK_URLS[ChainId.CRONOS]),\n  [ChainId.AURORA]: new ethers.providers.JsonRpcProvider(NETWORK_URLS[ChainId.AURORA]),\n  [ChainId.ROPSTEN]: new ethers.providers.JsonRpcProvider(NETWORK_URLS[ChainId.ROPSTEN]),\n  [ChainId.MUMBAI]: new ethers.providers.JsonRpcProvider(NETWORK_URLS[ChainId.MUMBAI]),\n  [ChainId.AVAXTESTNET]: new ethers.providers.JsonRpcProvider(NETWORK_URLS[ChainId.AVAXTESTNET]),\n  [ChainId.BSCTESTNET]: new ethers.providers.JsonRpcProvider(NETWORK_URLS[ChainId.BSCTESTNET]),\n  [ChainId.CRONOSTESTNET]: new ethers.providers.JsonRpcProvider(NETWORK_URLS[ChainId.CRONOSTESTNET]),\n  [ChainId.ARBITRUM_TESTNET]: new ethers.providers.JsonRpcProvider(NETWORK_URLS[ChainId.ARBITRUM_TESTNET]),\n  [ChainId.ARBITRUM]: new ethers.providers.JsonRpcProvider(NETWORK_URLS[ChainId.ARBITRUM]),\n  [ChainId.BTTC]: new ethers.providers.JsonRpcProvider(NETWORK_URLS[ChainId.BTTC]),\n  [ChainId.VELAS]: new ethers.providers.JsonRpcProvider(NETWORK_URLS[ChainId.VELAS]),\n  [ChainId.OASIS]: new ethers.providers.JsonRpcProvider(NETWORK_URLS[ChainId.OASIS]),\n}\n\n//https://router.firebird.finance/bsc/route\nexport const routerUri: { [chainId in ChainId]?: string } = {\n  [ChainId.MAINNET]: `${REACT_APP_AGGREGATOR_API}/ethereum/route`,\n  [ChainId.BSCMAINNET]: `${REACT_APP_AGGREGATOR_API}/bsc/route`,\n  [ChainId.MATIC]: `${REACT_APP_AGGREGATOR_API}/polygon/route`,\n  [ChainId.AVAXMAINNET]: `${REACT_APP_AGGREGATOR_API}/avalanche/route`,\n  [ChainId.FANTOM]: `${REACT_APP_AGGREGATOR_API}/fantom/route`,\n  [ChainId.CRONOS]: `${REACT_APP_AGGREGATOR_API}/cronos/route`,\n  [ChainId.ARBITRUM]: `${REACT_APP_AGGREGATOR_API}/arbitrum/route`,\n  [ChainId.BTTC]: `${REACT_APP_AGGREGATOR_API}/bttc/route`,\n  [ChainId.AURORA]: `${REACT_APP_AGGREGATOR_API}/aurora/route`,\n  [ChainId.VELAS]: `${REACT_APP_AGGREGATOR_API}/velas/route`,\n  [ChainId.OASIS]: `${REACT_APP_AGGREGATOR_API}/oasis/route`,\n}\n\nexport const AGGREGATION_EXECUTOR: { [chainId in ChainId]?: string } = {\n  [ChainId.BSCMAINNET]: '0xd12bcdfb9a39be79da3bdf02557efdcd5ca59e77',\n  [ChainId.MATIC]: '0xd12bcdfb9a39be79da3bdf02557efdcd5ca59e77',\n  [ChainId.AVAXMAINNET]: '0xd12bcdfb9a39be79da3bdf02557efdcd5ca59e77',\n  [ChainId.MAINNET]: '0xd12bcdfb9a39be79da3bdf02557efdcd5ca59e77',\n  [ChainId.FANTOM]: '0xd12bcdfb9a39be79da3bdf02557efdcd5ca59e77',\n  [ChainId.CRONOS]: '0xd12bcdfb9a39be79da3bdf02557efdcd5ca59e77',\n  [ChainId.BTTC]: '0xd12bcdfb9a39be79da3bdf02557efdcd5ca59e77',\n  [ChainId.ARBITRUM]: '0xd12bcdfb9a39be79da3bdf02557efdcd5ca59e77',\n  [ChainId.AURORA]: '0xd12bcdFB9A39BE79DA3bDF02557EFdcD5CA59e77',\n  [ChainId.VELAS]: '0xd12bcdFB9A39BE79DA3bDF02557EFdcD5CA59e77',\n  [ChainId.OASIS]: '0xd12bcdFB9A39BE79DA3bDF02557EFdcD5CA59e77',\n}\n\nexport const ETHER_ADDRESS = '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE'\n\nexport const ZERO_HEX = '0x0'\n","import { ChainId, CurrencyAmount, ETHER, TokenAmount } from '@dynamic-amm/sdk'\nimport { AGGREGATION_EXECUTOR, ETHER_ADDRESS } from '../config'\nimport { Contract } from 'ethers'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { AddressZero } from '@ethersproject/constants'\nimport { getAddress } from '@ethersproject/address'\nimport AGGREGATOR_EXECUTOR_ABI from '../abis/aggregation-executor.json'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function toSwapAddress(currencyAmount: CurrencyAmount) {\n  if (currencyAmount.currency === ETHER) {\n    return ETHER_ADDRESS\n  }\n  return currencyAmount instanceof TokenAmount ? currencyAmount.token.address : ''\n}\n\nexport function getAggregationExecutorAddress(chainId: ChainId): string {\n  return AGGREGATION_EXECUTOR[chainId] || ''\n}\n\nexport function getContract(address: string, ABI: any, library: Web3Provider): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return new Contract(getAddress(address), ABI, library)\n}\n\nexport function getAggregationExecutorContract(chainId: ChainId, library: Web3Provider): Contract {\n  return getContract(getAggregationExecutorAddress(chainId), AGGREGATOR_EXECUTOR_ABI, library)\n}\n\nexport function numberToHex(num: number) {\n  return `0x${num.toString(16)}`\n}\n","import invariant from 'tiny-invariant'\nimport {\n  ChainId,\n  Currency,\n  CurrencyAmount,\n  ETHER,\n  Token,\n  TokenAmount,\n  TradeType,\n  validateAndParseAddress,\n} from '@dynamic-amm/sdk'\nimport {\n  Aggregator,\n  encodeFeeConfig,\n  encodeSimpleModeData,\n  encodeSwapExecutor,\n  isEncodeUniswapCallback,\n} from './aggregator'\nimport { ETHER_ADDRESS, providers, routerUri, ZERO_HEX } from './config'\nimport { GetSwapParametersCustomTradeRouteParams, GetSwapParametersParams, SwapV2Parameters } from './types'\nimport { getAggregationExecutorAddress, getAggregationExecutorContract, numberToHex, toSwapAddress } from './utils'\nimport BigNumber from 'bignumber.js'\nimport { getAddress } from 'ethers/lib/utils'\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport async function getTradeExactInV2(\n  currencyAmountIn: CurrencyAmount | undefined,\n  currencyOut: Currency | undefined,\n  saveGas: boolean | undefined,\n  chainId: ChainId | undefined\n): Promise<Aggregator | null> {\n  // const parsedQs: { dexes?: string } = useParsedQueryString()\n  const routerApi = routerUri[chainId ?? ChainId.MAINNET]\n  if (!routerApi) {\n    return null\n  }\n\n  const gasPrice = undefined\n  if (currencyAmountIn && currencyOut) {\n    const trade = await Aggregator.bestTradeExactIn(\n      routerApi,\n      currencyAmountIn,\n      currencyOut,\n      saveGas,\n      undefined, // parsedQs.dexes,\n      gasPrice\n    )\n    return trade\n  } else {\n    return null\n  }\n}\n\nexport default async function getSwapParameters({\n  chainId,\n  currencyInAddress,\n  currencyInDecimals,\n  amountIn,\n  currencyOutAddress,\n  currencyOutDecimals,\n  tradeConfig,\n  feeConfig,\n  customTradeRoute,\n}: GetSwapParametersCustomTradeRouteParams): Promise<SwapV2Parameters | undefined> {\n  const result = await getData({\n    chainId,\n    currencyInAddress,\n    currencyInDecimals,\n    amountIn,\n    currencyOutAddress,\n    currencyOutDecimals,\n    tradeConfig,\n    feeConfig,\n    customTradeRoute,\n  })\n  return result.swapV2Parameters\n}\n\nfunction parseInput({\n  chainId,\n  currencyInAddress,\n  currencyInDecimals,\n  amountIn,\n  currencyOutAddress,\n  currencyOutDecimals,\n}: GetSwapParametersParams): {\n  chainId: ChainId\n  currencyAmountIn: CurrencyAmount\n  currencyOut: Currency\n} {\n  const currencyAmountIn: CurrencyAmount =\n    currencyInAddress === ETHER_ADDRESS\n      ? CurrencyAmount.ether(amountIn)\n      : new TokenAmount(new Token(chainId, getAddress(currencyInAddress), currencyInDecimals), amountIn)\n  const currencyOut: Currency =\n    currencyOutAddress === ETHER_ADDRESS\n      ? Currency.ETHER\n      : new Token(chainId, getAddress(currencyOutAddress), currencyOutDecimals)\n\n  return {\n    chainId: chainId as ChainId,\n    currencyAmountIn,\n    currencyOut,\n  }\n}\n\nexport async function getData({\n  chainId: _chainId,\n  currencyInAddress,\n  currencyInDecimals,\n  amountIn: _amountIn,\n  currencyOutAddress,\n  currencyOutDecimals,\n  tradeConfig,\n  feeConfig,\n  customTradeRoute,\n}: GetSwapParametersCustomTradeRouteParams): Promise<{\n  swapV2Parameters: SwapV2Parameters | undefined\n  rawExecutorData: unknown\n  isUseSwapSimpleMode: boolean | undefined\n  tradeRoute: any[][] | undefined\n}> {\n  const { currencyAmountIn, currencyOut, chainId } = parseInput({\n    chainId: _chainId,\n    currencyInAddress,\n    currencyInDecimals,\n    amountIn: _amountIn,\n    currencyOutAddress,\n    currencyOutDecimals,\n    tradeConfig,\n    feeConfig,\n  })\n  const trade = await getTradeExactInV2(currencyAmountIn, currencyOut, false, chainId)\n  if (!trade) {\n    return {\n      swapV2Parameters: undefined,\n      rawExecutorData: undefined,\n      isUseSwapSimpleMode: undefined,\n      tradeRoute: undefined,\n    }\n  }\n  const tradeRoute: any[][] = customTradeRoute ? JSON.parse(customTradeRoute) : trade.swaps\n  const etherIn = trade.inputAmount.currency === ETHER\n  const etherOut = trade.outputAmount.currency === ETHER\n  // the router does not support both ether in and out\n  invariant(!(etherIn && etherOut), 'ETHER_IN_OUT')\n\n  const to: string = validateAndParseAddress(tradeConfig.recipient)\n  const tokenIn: string = toSwapAddress(trade.inputAmount)\n  const tokenOut: string = toSwapAddress(trade.outputAmount)\n  const amountIn: string = '0x' + new BigNumber(_amountIn).toString(16)\n  const amountInWithFeeIn: string =\n    feeConfig && feeConfig.chargeFeeBy === 'currency_in'\n      ? feeConfig.isInBps\n        ? '0x' +\n          new BigNumber(_amountIn)\n            .div(new BigNumber(1).minus(new BigNumber(feeConfig.feeAmount).div(10000)))\n            .toString(16)\n        : '0x' + new BigNumber(amountIn).plus(feeConfig.feeAmount).toString(16)\n      : amountIn\n  const amountOut: string = '0x' + new BigNumber(tradeConfig.minAmountOut).toString(16)\n  const deadline = '0x' + tradeConfig.deadline.toString(16)\n  const destTokenFeeData =\n    feeConfig && feeConfig.chargeFeeBy === 'currency_out'\n      ? encodeFeeConfig({\n          feeReceiver: feeConfig.feeReceiver,\n          isInBps: feeConfig.isInBps,\n          feeAmount: feeConfig.feeAmount,\n        })\n      : '0x'\n  let methodNames: string[] = []\n  let args: Array<string | Array<string | string[]>> = []\n  let value: string = ZERO_HEX\n  let rawExecutorData: unknown = undefined\n  let isUseSwapSimpleMode: boolean | undefined\n\n  switch (trade.tradeType) {\n    case TradeType.EXACT_INPUT: {\n      methodNames = ['swap']\n      if (!tokenIn || !tokenOut || !amountIn || !amountOut) {\n        break\n      }\n      const aggregationExecutorAddress = getAggregationExecutorAddress(chainId ?? ChainId.MAINNET)\n      if (!aggregationExecutorAddress) {\n        break\n      }\n      const aggregationExecutorContract = getAggregationExecutorContract(\n        chainId ?? ChainId.MAINNET,\n        providers[chainId ?? ChainId.MAINNET]\n      )\n      const src: { [p: string]: BigNumber } = {}\n      const isEncodeUniswap = isEncodeUniswapCallback(chainId ?? ChainId.MAINNET)\n      if (feeConfig && feeConfig.chargeFeeBy === 'currency_in') {\n        const { feeReceiver } = feeConfig\n        src[feeReceiver] = new BigNumber(amountInWithFeeIn).minus(amountIn)\n      }\n      // Use swap simple mode when tokenIn is not ETH and every firstPool is encoded by uniswap.\n      isUseSwapSimpleMode = !etherIn\n      if (isUseSwapSimpleMode) {\n        for (let i = 0; i < tradeRoute.length; i++) {\n          const sequence = tradeRoute[i]\n          const firstPool = sequence[0]\n          if (!isEncodeUniswap(firstPool)) {\n            isUseSwapSimpleMode = false\n            break\n          }\n        }\n      }\n      const getSwapSimpleModeArgs = () => {\n        const firstPools: string[] = []\n        const firstSwapAmounts: string[] = []\n        tradeRoute.forEach((sequence) => {\n          for (let i = 0; i < sequence.length; i++) {\n            if (i === 0) {\n              const firstPool = sequence[0]\n              firstPools.push(firstPool.pool)\n              firstSwapAmounts.push(firstPool.swapAmount)\n              if (isEncodeUniswap(firstPool)) {\n                firstPool.collectAmount = '0'\n              }\n              if (sequence.length === 1 && isEncodeUniswap(firstPool)) {\n                firstPool.recipient =\n                  etherOut || feeConfig?.chargeFeeBy === 'currency_out' ? aggregationExecutorAddress : to\n              }\n            } else {\n              const A = sequence[i - 1]\n              const B = sequence[i]\n              if (isEncodeUniswap(A) && isEncodeUniswap(B)) {\n                A.recipient = B.pool\n                B.collectAmount = '0'\n              } else if (isEncodeUniswap(B)) {\n                B.collectAmount = '1'\n              } else if (isEncodeUniswap(A)) {\n                A.recipient = aggregationExecutorAddress\n              }\n              if (i === sequence.length - 1 && isEncodeUniswap(B)) {\n                B.recipient = etherOut || feeConfig?.chargeFeeBy === 'currency_out' ? aggregationExecutorAddress : to\n              }\n            }\n          }\n        })\n        const swapSequences = encodeSwapExecutor(tradeRoute, chainId ?? ChainId.MAINNET)\n        const sumSrcAmounts = Object.values(src).reduce((sum, value) => sum.plus(value), new BigNumber('0'))\n        const sumFirstSwapAmounts = firstSwapAmounts.reduce((sum, value) => sum.plus(value), new BigNumber('0'))\n        const amount = sumSrcAmounts.plus(sumFirstSwapAmounts).toFixed()\n        const swapDesc = [\n          tokenIn,\n          tokenOut,\n          Object.keys(src), // srcReceivers\n          Object.values(src).map((amount) => amount.toFixed()), // srcAmounts\n          to,\n          amount,\n          amountOut,\n          numberToHex(32),\n          destTokenFeeData,\n        ]\n        const executorDataForSwapSimpleMode = encodeSimpleModeData({\n          firstPools,\n          firstSwapAmounts,\n          swapSequences,\n          deadline,\n          destTokenFeeData,\n        })\n        args = [aggregationExecutorAddress, swapDesc, executorDataForSwapSimpleMode]\n        rawExecutorData = {\n          firstPools,\n          firstSwapAmounts,\n          swapSequences,\n          deadline,\n          destTokenFeeData,\n        }\n      }\n      const getSwapNormalModeArgs = () => {\n        tradeRoute.forEach((sequence) => {\n          for (let i = 0; i < sequence.length; i++) {\n            if (i === 0) {\n              const firstPool = sequence[0]\n              if (etherIn) {\n                if (isEncodeUniswap(firstPool)) {\n                  firstPool.collectAmount = firstPool.swapAmount\n                }\n              } else {\n                if (isEncodeUniswap(firstPool)) {\n                  firstPool.collectAmount = firstPool.swapAmount\n                }\n                src[aggregationExecutorAddress] = new BigNumber(firstPool.swapAmount).plus(\n                  src[aggregationExecutorAddress] ?? '0'\n                )\n              }\n              if (sequence.length === 1 && isEncodeUniswap(firstPool)) {\n                firstPool.recipient =\n                  etherOut || feeConfig?.chargeFeeBy === 'currency_out' ? aggregationExecutorAddress : to\n              }\n            } else {\n              const A = sequence[i - 1]\n              const B = sequence[i]\n              if (isEncodeUniswap(A) && isEncodeUniswap(B)) {\n                A.recipient = B.pool\n                B.collectAmount = '0'\n              } else if (isEncodeUniswap(B)) {\n                B.collectAmount = '1'\n              } else if (isEncodeUniswap(A)) {\n                A.recipient = aggregationExecutorAddress\n              }\n              if (i === sequence.length - 1 && isEncodeUniswap(B)) {\n                B.recipient = etherOut || feeConfig?.chargeFeeBy === 'currency_out' ? aggregationExecutorAddress : to\n              }\n            }\n          }\n        })\n        const swapSequences = encodeSwapExecutor(tradeRoute, chainId ?? ChainId.MAINNET)\n        const swapDesc = [\n          tokenIn,\n          tokenOut,\n          Object.keys(src), // srcReceivers\n          Object.values(src).map((amount) => amount.toFixed()), // srcAmounts\n          to,\n          feeConfig && feeConfig.chargeFeeBy === 'currency_in'\n            ? feeConfig.isInBps\n              ? '0x' +\n                new BigNumber(_amountIn)\n                  .div(new BigNumber(1).minus(new BigNumber(feeConfig.feeAmount).div(10000)))\n                  .toString(16)\n              : '0x' + new BigNumber(amountIn).plus(feeConfig.feeAmount).toString(16)\n            : amountIn,\n          amountOut,\n          etherIn ? numberToHex(0) : numberToHex(4),\n          destTokenFeeData,\n        ]\n        let executorData = aggregationExecutorContract.interface.encodeFunctionData('nameDoesntMatter', [\n          [swapSequences, tokenIn, tokenOut, amountOut, to, deadline, destTokenFeeData],\n        ])\n        // Remove method id (slice 10).\n        executorData = '0x' + executorData.slice(10)\n        args = [aggregationExecutorAddress, swapDesc, executorData]\n        rawExecutorData = [swapSequences, tokenIn, tokenOut, amountOut, to, deadline, destTokenFeeData]\n      }\n      if (isUseSwapSimpleMode) {\n        getSwapSimpleModeArgs()\n      } else {\n        getSwapNormalModeArgs()\n      }\n      if (etherIn) {\n        if (feeConfig && feeConfig.chargeFeeBy === 'currency_in') {\n          value = amountInWithFeeIn\n        } else {\n          value = amountIn\n        }\n      }\n      break\n    }\n  }\n\n  return {\n    swapV2Parameters: {\n      methodNames,\n      args,\n      value,\n    },\n    isUseSwapSimpleMode,\n    rawExecutorData,\n    tradeRoute,\n  }\n}\n\nexport * from './config/index'\nexport * from './types'\n"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","dexListConfig","dmm","icon","chainIds","ChainId","MAINNET","MATIC","BSCMAINNET","AVAXMAINNET","FANTOM","CRONOS","ARBITRUM","BTTC","AURORA","VELAS","OASIS","kyberswap","uniswap","uniswapv3","sushiswap","shibaswap","defiswap","quickswap","dfyn","firebird","oneswap","wault","curve","jetswap","polydex","polycat","gravity","cometh","dinoswap","pancake","mdex","biswap","apeswap","ellipsis","safeswap","pantherswap","nerve","pangolin","traderjoe","spookyswap","spiritswap","paintswap","morpheus","beethovenx","synapse","saddle","balancer","axial","lydia","yetiswap","hurricane","vvs","cronaswap","crodex","mmf","kryptodex","empiredex","photonswap","trisolaris","wannaswap","nearpad","swapr","wagyuswap","astroswap","yuzuswap","lizard","valleyswap","gemkeeper","dexIds","all","dexTypes","findDex","exchange","dex","DEX_TO_COMPARE","dec2bin","dec","bin","toString","maxBinLength","Array","join","getExchangeConfig","chainId","getKeyValue","types","allIds","assign","allTypes","id","encodeParameters","ethers","utils","AbiCoder","encode","isEncodeUniswapCallback","swap","includes","encodeSwapExecutor","swaps","map","sequence","binaryNumber","data","dexOption","pool","tokenIn","tokenOut","extra","_data$extra","tokenInIndex","_data$extra2","tokenOutIndex","swapAmount","limitReturnAmount","poolLength","poolType","_data$poolType","toLowerCase","usePoolUnderlying","_data$extra3","underlying","_data$extra4","_data$extra5","encodeCurveSwap","_data$extra6","vault","encodeBalancerSwap","encodeUniSwapV3","recipient","collectAmount","encodeUniSwap","parseInt","replace","encodeFeeConfig","feeReceiver","isInBps","feeAmount","encodeSimpleModeData","bytesDes","firstPools","firstSwapAmounts","swapSequences","item","inner","deadline","destTokenFeeData","concat","wrappedAmount2","currencyAmount","TokenAmount","currency","ETHER","WETH","raw","invariant","wrappedCurrency2","Token","Aggregator","inputAmount","outputAmount","amountInUsd","amountOutUsd","receivedUsd","tokens","tradeType","gasUsd","priceImpact","executionPrice","Price","minimumAmountOut","slippageTolerance","lessThan","ZERO","TradeType","EXACT_OUTPUT","slippageAdjustedAmountOut","Fraction","ONE","add","invert","multiply","quotient","token","CurrencyAmount","ether","maximumAmountIn","EXACT_INPUT","slippageAdjustedAmountIn","bestTradeExactIn","baseURL","currencyAmountIn","currencyOut","saveGas","dexes","gasPrice","amountIn","tokenInAddress","_amountIn$token","address","tokenOutAddress","search","URLSearchParams","_currencyAmountIn$raw","gasInclude","BigNumber","from","standard","mul","axios","response","toCurrencyAmount","JSBI","BigInt","console","compareDex","_amountIn$token2","_amountIn$token2$addr","_tokenOut$address","comparedDex","_currencyAmountIn$raw2","swapData","REACT_APP_AGGREGATOR_API","NETWORK_URLS","RINKEBY","ROPSTEN","GÖRLI","KOVAN","MUMBAI","BSCTESTNET","AVAXTESTNET","CRONOSTESTNET","ARBITRUM_TESTNET","providers","JsonRpcProvider","routerUri","AGGREGATION_EXECUTOR","ETHER_ADDRESS","toSwapAddress","getAggregationExecutorAddress","getAggregationExecutorContract","library","ABI","getAddress","isAddress","AddressZero","Contract","getContract","AGGREGATOR_EXECUTOR_ABI","numberToHex","num","getTradeExactInV2","routerApi","currencyInAddress","currencyInDecimals","currencyOutAddress","currencyOutDecimals","tradeConfig","feeConfig","customTradeRoute","getData","swapV2Parameters","parseInput","Currency","_amountIn","trade","rawExecutorData","isUseSwapSimpleMode","tradeRoute","JSON","parse","etherOut","etherIn","to","validateAndParseAddress","amountInWithFeeIn","chargeFeeBy","div","minus","plus","amountOut","minAmountOut","methodNames","args","aggregationExecutorAddress","aggregationExecutorContract","src","isEncodeUniswap","getSwapSimpleModeArgs","firstPool","A","B","sumSrcAmounts","reduce","sum","sumFirstSwapAmounts","amount","toFixed","swapDesc","executorDataForSwapSimpleMode","getSwapNormalModeArgs","executorData","encodeFunctionData"],"mappings":"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"}